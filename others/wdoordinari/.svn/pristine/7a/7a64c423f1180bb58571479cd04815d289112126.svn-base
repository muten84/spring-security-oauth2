import { Component, OnInit, Injectable, EventEmitter, Input } from "@angular/core";
import {
  Router, ActivatedRoute, NavigationEnd, Params, PRIMARY_OUTLET
  , RoutesRecognized, ActivatedRouteSnapshot
} from "@angular/router";
import "rxjs/add/operator/filter";
import { MenuItem } from '../model/menu-item';

@Component({
  selector: "breadcrumb",
  template: `          
  <ul class="breadcrumb" style=" background-color: #b4bcc2 !important;  margin-left: 225px;  color: #ecf0f1 !important;">    
      <li  class="breadcrumb-item" *ngFor="let route of breadcrumbs" style="margin-left: 1px;">
      <a >{{ route.label }}</a>
      </li>
  </ul> 
  `  
})

export class BreadcrumbComponent implements OnInit {

  breadcrumbs: Array<Object>;
  breadcrumb: string;
  url: string;

  constructor(private router: Router
    , private route: ActivatedRoute) {

  }

  ngOnInit() {
    this.router.events
      .filter(event => event instanceof NavigationEnd)
      .subscribe(event => {
        this.breadcrumbs = [];
        let currentRoute = this.route.root;
        let url = '';
        do {
          let childrenRoutes = currentRoute.children;
          currentRoute = null;
          childrenRoutes.forEach(route => {
            if (route.outlet === 'primary') {
              let routeSnapshot = route.snapshot;

              url += routeSnapshot.url.map(segment => segment.path).join('/');
              /*//console.log(routeSnapshot.url);
              //console.log(route.snapshot.data.headerComponent);*/
              this.breadcrumbs.push({
                label: route.snapshot.data.breadcrumb,
                url: url
              });
              currentRoute = route;
            }
          })
        } while (currentRoute);
      });

      // valore di default(la prima volta breadcrumbs non viene mostrato)
      if(!this.breadcrumbs || this.breadcrumbs.length == 0) {
        if(this.route && this.route.data && (<any>this.route.data).value) {
          this.breadcrumbs = [];
          this.breadcrumbs.push({
            label: (<any>this.route.data).value.breadcrumb
          });
        }
      }

  }

}